MainActivity:
package com.example.digitaltransformationviewer;

import android.graphics.Color;
import android.os.Bundle;
import android.text.Spannable;
import android.text.SpannableString;
import android.text.style.BackgroundColorSpan;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.SearchView;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Locale;

public class MainActivity extends AppCompatActivity {
    private TextView contentTextView;
    private String originalContent;
    private List<String> paragraphs;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Setup Toolbar
        Toolbar toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        // Initialize TextView
        contentTextView = findViewById(R.id.contentTextView);

        // Set original content
        originalContent = getString(R.string.digital_transformation_content);
        paragraphs = new ArrayList<>(Arrays.asList(originalContent.split("\n\n")));
        
        // Display content
        contentTextView.setText(originalContent);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.main_menu, menu);

        // Setup SearchView
        MenuItem searchItem = menu.findItem(R.id.action_search);
        SearchView searchView = (SearchView) searchItem.getActionView();
        searchView.setQueryHint("Search keywords");

        // Search functionality
        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {
            @Override
            public boolean onQueryTextSubmit(String query) {
                searchContent(query);
                return true;
            }

            @Override
            public boolean onQueryTextChange(String newText) {
                return false;
            }
        });

        return true;
    }

    @Override
    public boolean onOptionsItemSelected(@NonNull MenuItem item) {
        int itemId = item.getItemId();

        if (itemId == R.id.action_highlight) {
            showHighlightDialog();
            return true;
        } else if (itemId == R.id.action_sort_alphabetical) {
            sortContentAlphabetically();
            return true;
        } else if (itemId == R.id.action_sort_relevance) {
            sortContentByRelevance();
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    private void searchContent(String query) {
        String lowercaseQuery = query.toLowerCase(Locale.ROOT);
        List<String> matchingParagraphs = new ArrayList<>();

        for (String paragraph : paragraphs) {
            if (paragraph.toLowerCase(Locale.ROOT).contains(lowercaseQuery)) {
                matchingParagraphs.add(paragraph);
            }
        }

        if (!matchingParagraphs.isEmpty()) {
            String resultContent = String.join("\n\n", matchingParagraphs);
            contentTextView.setText(resultContent);
            Toast.makeText(this, matchingParagraphs.size() + " matching paragraphs found", Toast.LENGTH_SHORT).show();
        } else {
            Toast.makeText(this, "No matching paragraphs found", Toast.LENGTH_SHORT).show();
        }
    }

    private void showHighlightDialog() {
        // Create a dialog for highlight input
        SearchView highlightView = new SearchView(this);
        highlightView.setQueryHint("Enter words to highlight");

        new androidx.appcompat.app.AlertDialog.Builder(this)
            .setTitle("Highlight Words")
            .setView(highlightView)
            .setPositiveButton("Highlight", (dialog, which) -> {
                String highlightText = highlightView.getQuery().toString();
                highlightContent(highlightText);
            })
            .setNegativeButton("Cancel", null)
            .show();
    }

    private void highlightContent(String highlightText) {
        SpannableString spannableString = new SpannableString(originalContent);
        
        // Split multiple keywords
        String[] keywords = highlightText.split("\\s+");
        
        for (String keyword : keywords) {
            int startIndex = 0;
            while ((startIndex = originalContent.toLowerCase().indexOf(keyword.toLowerCase(), startIndex)) != -1) {
                spannableString.setSpan(
                    new BackgroundColorSpan(Color.YELLOW), 
                    startIndex, 
                    startIndex + keyword.length(), 
                    Spannable.SPAN_EXCLUSIVE_EXCLUSIVE
                );
                startIndex += keyword.length();
            }
        }
        
        contentTextView.setText(spannableString);
    }

    private void sortContentAlphabetically() {
        Collections.sort(paragraphs);
        String sortedContent = String.join("\n\n", paragraphs);
        contentTextView.setText(sortedContent);
        Toast.makeText(this, "Content sorted alphabetically", Toast.LENGTH_SHORT).show();
    }

    private void sortContentByRelevance() {
        // Simple relevance sorting based on word count
        paragraphs.sort(Comparator.comparingInt(p -> p.split("\\s+").length).reversed());
        String sortedContent = String.join("\n\n", paragraphs);
        contentTextView.setText(sortedContent);
        Toast.makeText(this, "Content sorted by relevance", Toast.LENGTH_SHORT).show();
    }
}


activitymain:
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical">

    <androidx.appcompat.widget.Toolbar
        android:id="@+id/toolbar"
        android:layout_width="match_parent"
        android:layout_height="?attr/actionBarSize"
        android:background="?attr/colorPrimary"
        app:title="Digital Transformation"
        app:titleTextColor="@android:color/white"/>

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <TextView
            android:id="@+id/contentTextView"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:padding="16dp"
            android:textSize="16sp"
            android:lineSpacingMultiplier="1.5"/>

    </ScrollView>
</LinearLayout>


main_menu:
<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto">
    
    <item
        android:id="@+id/action_search"
        android:icon="@android:drawable/ic_menu_search"
        android:title="Search"
        app:actionViewClass="android.widget.SearchView"
        app:showAsAction="ifRoom"/>

    <item
        android:id="@+id/action_highlight"
        android:title="Highlight"
        app:showAsAction="never"/>

    <item
        android:title="Sort"
        app:showAsAction="never">
        <menu>
            <item
                android:id="@+id/action_sort_alphabetical"
                android:title="Alphabetically"/>
            
            <item
                android:id="@+id/action_sort_relevance"
                android:title="By Relevance"/>
        </menu>
    </item>
</menu>

string.xml: res/values
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="digital_transformation_content">Digital transformation is the integration of digital technology into all areas of a business, fundamentally changing how you operate and deliver value to customers.

It's also a cultural change that requires organizations to continually challenge the status quo, experiment, and get comfortable with failure. This means walking away from long-standing business processes that companies were built upon in favor of relatively new practices that are still being defined.

Digital transformation looks different for every company. However, there are several common themes across industries. These include increased efficiency, improved customer experience, data-driven decision making, and the ability to quickly adapt to changing market conditions.

Key technologies driving digital transformation include cloud computing, artificial intelligence, machine learning, big data analytics, and the Internet of Things (IoT). These technologies enable businesses to collect and analyze vast amounts of data, automate complex processes, and create more personalized customer experiences.

The COVID-19 pandemic has accelerated digital transformation across many industries. Companies that were able to quickly pivot to digital platforms and remote work environments were better positioned to survive and thrive during unprecedented challenges.

Successful digital transformation requires more than just implementing new technologies. It demands a comprehensive strategy that aligns technology with business goals, invests in employee training, and creates a culture of continuous innovation and learning.</string>
</resources>

gradle:
dependencies {
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
}

manifest:
<application
    ...
    android:theme="@style/Theme.AppCompat.NoActionBar">
    ...
</application>